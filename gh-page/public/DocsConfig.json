{
    "Clone": {
        "plain": {
            "type": "method",
            "static": true,
            "permission": "public",
            "description": "Clone an object、array or anything else. (by build-in JSON)",
            "declare": "Clone.plain<T>(o: T): T",
            "example": ""
        },
        "deep": {
            "type": "method",
            "static": true,
            "permission": "public",
            "description": "Clone an object、array or anything else. (by Reflect)",
            "declare": "Clone.deep<T>(o: T): T",
            "example": "const oriObj = {\n    type_number: 12345,\n    type_string: 'i am string',\n    type_boolean: false,\n    type_undefined: undefined,\n    type_null: null,\n    type_array: [1, 2, 3, 4, 5],\n    type_object: {\n        attr1: 1,\n        attr2: '2'\n    },\n    type_function: () => {\n        console.log('i am function')\n    }\n}"
        }
    },
    "Queue": {
        "constructor": {
            "type": "constructor",
            "static": false,
            "permission": "public",
            "description": "Create a queue with max length",
            "declare": "constructor(max: number)"
        },
        "length": {
            "type": "parameter",
            "static": false,
            "permission": "public",
            "description": "description here",
            "declare": "const length: number = new Queue<string>(5).length",
            "example": "example 1"
        },
        "create": {
            "type": "method",
            "static": true,
            "permission": "public",
            "description": "description here",
            "declare": "Queue.create<T>(max: T): Queue<T>"
        },
        "getQueue": {
            "type": "method",
            "static": false,
            "permission": "public",
            "description": "description here",
            "declare": "getQueue(): T[]"
        },
        "in": {
            "type": "method",
            "static": false,
            "permission": "public",
            "description": "description here",
            "declare": "in(...items: T[]): number"
        },
        "out": {
            "type": "method",
            "static": false,
            "permission": "public",
            "description": "description here",
            "declare": "out(n: number): T[]"
        },
        "circle": {
            "type": "method",
            "static": false,
            "permission": "public",
            "description": "description here",
            "declare": "circle(n: number, reverse: boolean = false): void"
        },
        "clear": {
            "type": "method",
            "static": false,
            "permission": "public",
            "description": "description here",
            "declare": "clear(n?: number): void"
        }
    },
    "Search": {

    },
    "Stack": {

    },
    "Tree": {

    }
}